/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import * as THREE from 'three'
import React, { useRef } from 'react'
import { useGLTF } from '@react-three/drei'
import { GLTF } from 'three-stdlib'
import { PATH_TO_LOWPOLY_MODELS } from '../../constans'

type GLTFResult = GLTF & {
  nodes: {
    Mesh: THREE.Mesh
    Mesh_1: THREE.Mesh
    Mesh_2: THREE.Mesh
    Mesh_3: THREE.Mesh
    Mesh_4: THREE.Mesh
    Mesh_5: THREE.Mesh
  }
  materials: {
    ['Material #27']: THREE.MeshStandardMaterial
    ['Material #28']: THREE.MeshStandardMaterial
    ['Material #13']: THREE.MeshStandardMaterial
    ['Material #15']: THREE.MeshStandardMaterial
    ['Material #42']: THREE.MeshStandardMaterial
    ['Material #41']: THREE.MeshStandardMaterial
  }
}

const PATH: string = PATH_TO_LOWPOLY_MODELS + 'big-ben/big-ben.gltf'

export default function BigBen({ ...props }: JSX.IntrinsicElements['group']) {
  const group = useRef<THREE.Group>()
  const { nodes, materials } = useGLTF(PATH) as GLTFResult
  return (
    <group ref={group} {...props} dispose={null}>
      <group name="Box002" scale={[1, 1, 1]}>
        <mesh name="Mesh" geometry={nodes.Mesh.geometry} material={materials['Material #27']} />
        <mesh name="Mesh_1" geometry={nodes.Mesh_1.geometry} material={materials['Material #28']} />
        <mesh name="Mesh_2" geometry={nodes.Mesh_2.geometry} material={materials['Material #13']} />
        <mesh name="Mesh_3" geometry={nodes.Mesh_3.geometry} material={materials['Material #15']} />
        <mesh name="Mesh_4" geometry={nodes.Mesh_4.geometry} material={materials['Material #42']} />
        <mesh name="Mesh_5" geometry={nodes.Mesh_5.geometry} material={materials['Material #41']} />
      </group>
    </group>
  )
}

useGLTF.preload(PATH)

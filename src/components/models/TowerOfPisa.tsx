/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import * as THREE from 'three'
import React, { useRef } from 'react'
import { useGLTF } from '@react-three/drei'
import { GLTF } from 'three-stdlib'
import { PATH_TO_LOWPOLY_MODELS } from '../../constans'

type GLTFResult = GLTF & {
  nodes: {
    Mesh: THREE.Mesh
    Mesh_1: THREE.Mesh
    Mesh_2: THREE.Mesh
  }
  materials: {
    ['Material #25']: THREE.MeshStandardMaterial
    ['Material #27']: THREE.MeshStandardMaterial
    ['Material #26']: THREE.MeshStandardMaterial
  }
}

const PATH = PATH_TO_LOWPOLY_MODELS + 'tower-of-pisa/tower_of_pisa.gltf'

export default function TowerOfPisa({ ...props }: JSX.IntrinsicElements['group']) {
  const group = useRef<THREE.Group>()
  const { nodes, materials } = useGLTF(PATH) as GLTFResult
  return (
    <group ref={group} {...props} dispose={null}>
      <group scale={1}>
        <mesh geometry={nodes.Mesh.geometry} material={materials['Material #25']} />
        <mesh geometry={nodes.Mesh_1.geometry} material={materials['Material #27']} />
        <mesh geometry={nodes.Mesh_2.geometry} material={materials['Material #26']} />
      </group>
    </group>
  )
}

useGLTF.preload(PATH)

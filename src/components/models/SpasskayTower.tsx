/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import * as THREE from 'three'
import React, { useRef } from 'react'
import { useGLTF } from '@react-three/drei'
import { GLTF } from 'three-stdlib'
import { PATH_TO_LOWPOLY_MODELS } from '../../constans'

type GLTFResult = GLTF & {
  nodes: {
    Mesh002: THREE.Mesh
    Mesh002_1: THREE.Mesh
    Mesh002_2: THREE.Mesh
    Mesh002_3: THREE.Mesh
    Mesh002_4: THREE.Mesh
  }
  materials: {
    ['Material #60.002']: THREE.MeshStandardMaterial
    ['Material #48.002']: THREE.MeshStandardMaterial
    ['Material #62.002']: THREE.MeshStandardMaterial
    ['Material #47.002']: THREE.MeshStandardMaterial
    ['Material #61.002']: THREE.MeshStandardMaterial
  }
}

const PATH = PATH_TO_LOWPOLY_MODELS + 'spasskay-tower/spasskay_tower.gltf';

export default function SpasskayTower({ ...props }: JSX.IntrinsicElements['group']) {
  const group = useRef<THREE.Group>()
  const { nodes, materials } = useGLTF(PATH) as GLTFResult
  return (
    <group ref={group} {...props} dispose={null}>
      <group scale={1} userData={{ name: 'Box002' }}>
        <mesh geometry={nodes.Mesh002.geometry} material={materials['Material #60.002']} />
        <mesh geometry={nodes.Mesh002_1.geometry} material={materials['Material #48.002']} />
        <mesh geometry={nodes.Mesh002_2.geometry} material={materials['Material #62.002']} />
        <mesh geometry={nodes.Mesh002_3.geometry} material={materials['Material #47.002']} />
        <mesh geometry={nodes.Mesh002_4.geometry} material={materials['Material #61.002']} />
      </group>
    </group>
  )
}

useGLTF.preload(PATH)
